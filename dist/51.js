"use strict";(self.webpackChunkquicksum_svelte_webpack=self.webpackChunkquicksum_svelte_webpack||[]).push([[51],{594:(e,t,s)=>{s.d(t,{q:()=>a});const a=(e,t)=>{new MutationObserver((e=>{e.forEach((e=>{const s="attributes"===e.type,a=!e.target.classList.contains("typing");s&&a&&t()}))})).observe(e,{attributes:!0,childList:!0,subtree:!0})}},2827:(e,t,s)=>{s.d(t,{V:()=>a});const a=(e,t)=>Math.floor(Math.random()*(t-e)+e)},9547:(e,t,s)=>{s.d(t,{_:()=>a});const a=e=>new Promise((t=>setTimeout(t,e)))},446:(e,t,s)=>{s.d(t,{$:()=>c});var a=s(2827),n=s(9547);const c=async e=>(0,n._)(Array.isArray(e)?e[(0,a.V)(0,e.length)]:e)},8313:(e,t,s)=>{s.d(t,{J:()=>n});var a=s(446);const n=async({currentNode:e,text:t},s)=>{e.classList.add("typing");for(let n=0;n<=t.length;n++)"<"===t[n]&&(n=t.indexOf(">",n)),e.innerHTML=t.slice(0,n),await(0,a.$)(s.interval);e.classList.replace("typing","finished-typing")}},9051:(e,t,s)=>{s.r(t),s.d(t,{mode:()=>c});var a=s(8313),n=s(594);const c=async({elements:e},t)=>{if(t.cascade)e.forEach((e=>e.currentNode.textContent=""));else{const{getLongestTextElement:a}=await s.e(218).then(s.bind(s,1319)),c=a(e);(0,n.q)(c,(()=>t.dispatch("done")))}for(const s of e)t.cascade?await(0,a.J)(s,t):(0,a.J)(s,t);t.cascade&&t.dispatch("done")}}}]);